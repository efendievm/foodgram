name: Main Foodgram workflow

on:
  push

jobs:
    backend_tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                python-version: 3.9
            - name: Install pip8
              run: |
                python -m pip install --upgrade pip 
                pip install flake8==6.0.0
            - name: Test with flake8
              run: |
                python -m flake8 backend/
      
    build_and_push_to_docker_hub:
        name: Push Docker images to DockerHub
        runs-on: ubuntu-latest
        needs: backend_tests
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker 
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Push to Docker Hub backend
              uses: docker/build-push-action@v4
              with:
                context: ./backend/
                push: true
                tags: efendievm95/foodgram_backend:latest
            - name: Push to DockerHub frontend
              uses: docker/build-push-action@v4
              with:
                push: true
                context: ./frontend/
                tags: efendievm95/foodgram_frontend:latest
            - name: Push to DockerHub gateaway
              uses: docker/build-push-action@v4
              with:
                push: true
                context: ./nginx/
                tags: efendievm95/gateaway:latest

    deploy:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs:
          - build_and_push_to_docker_hub
        steps:
          - name: Checkout repo
            uses: actions/checkout@v3
          - name: Copy docker-compose.yml via ssh
            uses: appleboy/scp-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USER }}
              key: ${{ secrets.SSH_KEY }}
              passphrase: ${{ secrets.SSH_PASSPHRASE }}
              source: "docker-compose.production.yml"
              target: "foodgram"
          - name: Executing remote ssh commands to deploy
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USER }}
              key: ${{ secrets.SSH_KEY }}
              passphrase: ${{ secrets.SSH_PASSPHRASE }}
              script: |
                cd foodgram
                touch .env
                echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
                echo DB_NAME=${{ secrets.POSTGRES_DB }} >> .env
                echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
                echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
                echo DB_HOST=${{ secrets.DB_HOST }} >> .env
                echo DB_PORT=${{ secrets.DB_PORT }} >> .env
                echo SEED_USERS_PASSWORD=${{ secrets.SEED_USERS_PASSWORD }} >> .env
                echo ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} >> .env
                echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> .env
                echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> .env
                sudo docker compose -f docker-compose.production.yml pull
                sudo docker compose -f docker-compose.production.yml down
                sudo docker compose -f docker-compose.production.yml up -d
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
                sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /static/static/
                sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/media/. /media/
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
                sudo docker compose -f docker-compose.production.yml exec backend python manage.py seed